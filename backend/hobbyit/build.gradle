buildscript {
	ext{
		queryDslVersion = "5.0.0:jakarta"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'

	// qClass 생성을 위한 task plugin 등록
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}


group = 'com.a505'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
//	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.14'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//queryDsl
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
//	annotationProcessor "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
}

tasks.named('test') {
	useJUnitPlatform()
}

// qClass 저장 디렉토리
def querydslDir = "$buildDir/generated/querydsl"

// jpa 내 적용 및
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets { //이놈
	main.java.srcDir querydslDir
}

configurations { // 이놈
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl { // 이놈
	options.annotationProcessorPath = configurations.querydsl
}
